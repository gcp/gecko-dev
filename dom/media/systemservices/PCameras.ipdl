/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

include protocol PContent;
include protocol PBackground;

namespace mozilla {
namespace camera {

struct CaptureCapability
{
  int width;
  int height;
  int maxFPS;
  int expectedCaptureDelay;
  int rawType;
  int codecType;
  bool interlaced;
};

sync protocol PCameras
{
  manager PBackground;

child:
  async FrameSizeChange(int capEngine, int cap_id, int w, int h);
  // transfers ownership of |buffer| from parent to child
  async DeliverFrame(int capEngine, int cap_id,
                     Shmem buffer, int size, uint32_t time_stamp,
                     int64_t ntp_time, int64_t render_time);

parent:
  sync NumberOfCaptureDevices(int engine) returns (int numdev);
  sync NumberOfCapabilities(int engine, nsCString deviceUniqueIdUTF8)
       returns (int numcap);
  sync GetCaptureCapability(int engine, nsCString unique_idUTF8, int capability_number)
                            returns (CaptureCapability capability);
  sync GetCaptureDevice(int engine, int num) returns (nsCString device_name, nsCString device_id);

  sync AllocateCaptureDevice(int engine, nsCString unique_idUTF8) returns (int numdev);
  sync ReleaseCaptureDevice(int engine, int numdev);
  sync StartCapture(int engine, int numdev, CaptureCapability capability);
  sync StopCapture(int engine, int numdev);
  // transfers frame back
  async ReleaseFrame(Shmem s);

  async __delete__();
};

} // namespace camera
} // namespace mozilla
